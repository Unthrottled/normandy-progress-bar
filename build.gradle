plugins {
  id 'org.jetbrains.intellij' version '0.4.16'
  id "org.jetbrains.kotlin.jvm" version "1.4.32"
  id 'org.kordamp.gradle.markdown' version '2.2.0'
  id "org.jlleitschuh.gradle.ktlint" version "10.0.0"
}
repositories {
  mavenCentral()
}

group 'io.unthrottled'
version '1.9.9'

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  implementation 'commons-io:commons-io:2.6'
  implementation 'io.sentry:sentry:4.3.0'
  implementation "com.google.code.gson:gson:2.8.6"
}

configurations {
  implementation.exclude group: 'org.slf4j'
}

intellij {
  version 'LATEST-EAP-SNAPSHOT'
  type 'IU'
  alternativeIdePath idePath

  if (System.getenv().getOrDefault("ENV", "") == "DEV") {
    plugins(
//      'io.acari.DDLCTheme:11.3.1'
    )
  }
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

markdownToHtml {
  sourceDir file("$projectDir/docs")
  outputDir file("$projectDir/build/html")
}

patchPluginXml {
  def releaseNotes = "$projectDir/build/html/RELEASE-NOTES.html"
  if (file(releaseNotes).exists()) {
    changeNotes file(releaseNotes).text
  }
  sinceBuild System.getenv("pluginSinceBuild") ?: sinceBuildP
  untilBuild System.getenv("pluginUntilBuild") ?: untilBuildP
}

tasks.patchPluginXml.dependsOn("markdownToHtml")
